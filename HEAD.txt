# Шпаргалка по HEAD

HEAD - это указатель на текущую активную ветку в Git репозитории. Вот некоторая основная информация о HEAD:

## Основные понятия:

- **HEAD**: Указатель на текущую активную ветку в Git репозитории.
- **Коммит**: Историческая точка сохранения изменений в Git репозитории.
- **Ветка**: Линия разработки, которая может содержать несколько коммитов.
- **Мастер**: По умолчанию, основная ветка в Git репозитории.
- **Детачнутая голова**: Ситуация, когда HEAD указывает на определенный коммит, а не на ветку.

## Использование:

- **Просмотр текущей ветки**: `git branch` или `git status` покажут текущую ветку, на которой находится HEAD.
- **Переключение веток**: `git checkout <branch>` позволяет переключиться на другую ветку, изменяя HEAD.
- **Создание новой ветки**: `git branch <new-branch>` создаст новую ветку, указывая HEAD на текущий коммит.
- **Создание коммита**: При создании коммита, HEAD будет обновлен и указывать на новый коммит.
- **Перемещение HEAD на конкретный коммит**: `git checkout <commit-hash>` переместит HEAD на указанный коммит, создавая детачнутую голову.

## Примеры использования:

- `git branch` - показывает список веток и выделяет текущую ветку.
- `git checkout develop` - переключается на ветку "develop", изменяя HEAD.
- `git branch feature-branch` - создает новую ветку "feature-branch" на текущем коммите, указывая HEAD на новую ветку.
- `git commit -m "Added new feature"` - создает новый коммит и обновляет HEAD, указывая на новый коммит.

## Дополнительные возможности:

- **Отмена коммита**: Используйте команду `git revert` или `git reset` для отмены коммита и перемещения HEAD на предыдущий коммит.
- **Перемещение HEAD на определенную ветку или коммит**: Используйте команду `git checkout` с именем ветки или хешем коммита.

Это основная информация о HEAD в Git. HEAD является важным указателем, который позволяет контролировать текущую активную ветку и перемещаться по истории коммитов.