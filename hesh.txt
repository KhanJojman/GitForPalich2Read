# Шпаргалка по хешу

Хеш-функция - это алгоритм, который принимает на вход данные произвольной длины и преобразует их в фиксированную строку фиксированной длины. Вот некоторая основная информация о хеше:

## Основные понятия:

- **Хеш**: Результат применения хеш-функции к исходным данным.
- **Хеш-функция**: Алгоритм, который преобразует данные в хеш.
- **Коллизия**: Ситуация, когда двум разным входным данным соответствует один и тот же хеш.
- **Интегритет**: Хеш может служить проверкой целостности данных. Даже небольшое изменение в исходных данных приведет к совершенно другому хешу.
- **Необратимость**: Получить исходные данные из хеша практически невозможно.

## Применение:

- **Хранение паролей**: Хеширование паролей позволяет безопасно хранить их в базе данных, не храня фактические пароли.
- **Проверка целостности**: Хеш может использоваться для проверки, не были ли изменены данные или файлы.
- **Уникальные идентификаторы**: Хеш может служить в качестве уникального идентификатора для данных или файлов.

## Примеры хеш-функций:

- **MD5**: Быстрый, но считается небезопасным.
- **SHA-1**: Устарел и считается небезопасным.
- **SHA-256**: Широко используется и считается безопасным.
- **bcrypt**: Специально разработан для хеширования паролей.

## Пример использования хеш-функции в Python:

```python
import hashlib

data = "Hello, world!"
hash_object = hashlib.sha256(data.encode())
hex_dig = hash_object.hexdigest()
print(hex_dig)
